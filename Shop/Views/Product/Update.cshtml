
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css{
    <link href="/Statics/adminlte/plugins/wizard/css/jquery.steps.css" rel="stylesheet" />
}
<!--<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>商品添加</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item">
                        <a href="#">首页</a>
                    </li>
                    <li class="breadcrumb-item active">商品管理</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card card-info">
                <form class="form-horizontal" id="form">
                    <div class="card-body">
                        <div>
                            一级分类:
                            <select id="category1" style="width:100px"></select>
                        </div>
                        <div>
                            二级分类:
                            <select id="category2" style="width:100px"></select>
                        </div>
                        <div>
                            三级分类:
                            <select id="category3" style="width:100px"></select>
                        </div>
                        <div id="skus">
                            @*disabled=""复选框已禁用checked=""复选框已启用*@

                        </div>
                    </div>

                    <div class="card-footer">
                        <button onclick="createSkuCollections()" type="button">生成sku组合</button>
                        <a href="/ProductCategory/List" class="btn btn-default float-right">返回</a>
                    </div>
                    <div>
                        <table id="sku-table" border="1">
                            <thead>
                                <tr></tr>
                            <tbody></tbody>
                        </table>
                        <div id="gn"></div>
                    </div>
                    <div class="col-sm-6" style="font-size:25px;">
                        商品参数
                        <div id="sx">
                            <div>

                            </div>
                        </div>
                    </div>
                    <div>
                        <input type="file" name="Img" id="Img" multiple width="100" height="100">
                    </div>
                    <div>
                        <button type="button" id="upload">上传</button>
                    </div>

                </form>
            </div>
        </div>
    </div>
</section>-->
<div id="wizard" style="padding-top:10px;">
    <h1>第一步:商品基本信息</h1>
    <div style="padding:20px 10px;">
        <div class="form-group row">
            <label for="Name" class="col-sm-2 col-form-label">商品标题:</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="ProductTitle" name="ProductTitle" placeholder="请输入商品标题">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">商品品牌:</label>
            <div class="col-sm-10">
                <select id="brand" class="form-control" style="font-size:14px;"></select>
            </div>

        </div>
        <div class="form-group row">
            <label for="Name" class="col-sm-2 col-form-label">商品关键字:</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="keyWords" name="keyWords" placeholder="请输入商品关键字">
            </div>
        </div>
        <div class="form-group row">
            <label for="Name" class="col-sm-2 col-form-label">商品价格:</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="Price" name="Price" placeholder="请输入商品价格">
            </div>
        </div>
        <div class="form-group row">
            <label for="Name" class="col-sm-2 col-form-label">商品库存:</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="Stock" name="Stock" placeholder="请输入商品库存">
            </div>
        </div>

    </div>

    <h1>第二步:商品图片</h1>@*//multiple上传多张图片的属性*@
    <div style="padding:20px 10px;">
        <div class="form-group row">
            <label for="Img" class="col-sm-2 col-form-label">商品主图:</label>
            <div class="col-sm-10">
                <input type="file" name="ProductMainImg" id="ProductMainImg" width="100" height="100">
            </div>
        </div>

        <div class="form-group row">
            <label for="Img" class="col-sm-2 col-form-label">商品轮播图:</label>
            <div class="col-sm-10">
                <input type="file" name="ProductSlideImgs" id="ProductSlideImgs" width="100" height="100" multiple>
            </div>
        </div>
        <div class="form-group row">
            <label for="Img" class="col-sm-2 col-form-label">商品详情:</label>
            <div class="col-sm-10">
                <input type="file" name="ProductDetail" id="ProductDetail" width="100" height="100" multiple>
            </div>
        </div>

    </div>

    <h1>第三步:商品属性,sku</h1>
    <div style="padding:20px 20px">
        <div class="form-group row" style="margin-bottom:20px">
            <label class="col-sm-2 col-form-label">商品类别:</label>

            <div class="col-sm-10">
                <div class="row">
                    <div class="col-sm-4">
                        <div class="row">
                            <span class="col-sm-4 col-form-label">一级分类:</span>
                            <select id="category1" class="form-control col-sm-6" style="font-size:14px"></select>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="row">
                            <span class="col-sm-4 col-form-label">二级分类:</span>
                            <select id="category2" class="form-control col-sm-6" style="font-size:14px"></select>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="row">
                            <span class="col-sm-4 col-form-label">三级分类:</span>
                            <select id="category3" class="form-control col-sm-6" style="font-size:14px"></select>
                        </div>
                    </div>

                </div>
            </div>
            <label class="col-sm-2 col-form-label">商品规格:</label>
            <div class="col-sm-10">
                <div id="skus" style="padding:20px;margin-bottom:15px;background-color:rgb(244,246,249);border:1px solid #e9e9e9;border-radius:4px;">

                </div>
                <div>
                    <table id="sku-table" class="table table-bordered">
                        <thead>
                            <tr>
                                <th>价格</th>
                                <th>库存</th>
                                <th>SKU编号</th>
                            </tr>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="card-footer row" id="gn">
            <div class="col-sm-2"><button onclick="createSkuCollections()" class="btn btn-primary" type="button">生成sku组合</button></div>
        </div>
        @*<div>
                <table id="sku-table" border="1">
                    <thead>
                        <tr></tr>
                    <tbody></tbody>
                </table>
                <div id="gn"></div>
            </div>*@
    <div id="SkuImg" style="padding:20px;margin-bottom:15px;background-color:rgb(244,246,249);border:1px solid #e9e9e9;border-radius:4px;">
    </div>
        <div class="form-group row" style="margin-bottom:20px">
            <label class="col-sm-2 col-form-label">商品规格:</label>
            <div class="col-sm-10">
                <div class="row">
                    <div id="sx" class="col-sm-4">

                    </div>
                </div>
            </div>
        </div>
        @*//style="font-size:25px;"*@
        @*<div class="col-sm-6">
                商品参数
                <div>
                    <div>

                    </div>
                </div>
            </div>*@
        @*<div>
                <input type="file" name="Img" id="Img" multiple width="100" height="100">
            </div>*@
        @*<div class="card-footer row">
                <div class="col-sm-2"><button id="upload" class="btn btn-primary" type="button">上传</button></div>
            </div>*@
        @*<div>
                <button type="button" id="upload">上传</button>
            </div>*@
    </div>

</div>

@section js{
    <script src="/Statics/adminlte/plugins/wizard/js/jquery.steps.js"></script>
    @*<script src="/Statics/adminlte/plugins/wizard/js/jquery.steps.min.js"></script>*@
    <script>
         $.getUrlParam = function (name) {//获取展示传ID的方法
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return unescape(r[2]); return null;
    }
    var ImgUploadUrl="http://localhost:17114/Img/Upload"//图片方法单独出来
    var ProductSlideImgs = [], ProductDetail = [], ProductMainImg = [], ProductCategoryID, skuArrays=[];
    //初始化商品信息
     function init() {
         var id = $.getUrlParam("id")
         //品牌
          $.ajax({
                url: "/ProductBrand/GetAllByAddProduct",
                type: "GET",

                dataType: "json",
                success: function (data) {
                    $("#brand").append("<option value=\"\">请选择</option>")

                    data.map(function (v) {
                        $("#brand").append("<option value=\"" + v.ID + "\">" + v.BrandName + "</option>")
                    })
                }
            })
         $.ajax({
                url: "/Product/Getone",
                type: "GET",
                data: { id: id },
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    //1.商品基本信息
                    var productobj = data.product;
                    //商品标题
                    $("#ProductTitle").val(productobj.ProductTitle);
                    //商品品牌
                    $("#brand").val(productobj.ProductBrandID);
                    //商品关键字
                     $("#keyWords").val(productobj.keyWords);
                    //商品价格
                    $("#Price").val(productobj.Price);
                    //商品库存
                    $("#Stock").val(productobj.Stock);
                    //2.商品图片
                    //商品主图:
                    var _ProductMainImg = eval("(" + productobj.ProductMainImg + ")")
                    console.log(_ProductMainImg)
                    var ProductMainImgTag = ["<img src='" + _ProductMainImg[0].url + "' style='width:200px' class='file-preview-image' >"]
                    ProductMainImg.push(_ProductMainImg[0])//修改的时候不上传新图片把展示的添加到原来的里面
                    $('#ProductMainImg').fileinput({
                        language: 'zh',//设置语言
                        allowedFileExtensions: ['jpg', 'jpeg', 'png', 'gif'],//接受文件的后缀
                        showUpload: true,//是否显示上传按钮
                        browseclass: "btn btn-primary",//按钮样式
                        dropZoneEnabled: false,
                        uploadUrl: ImgUploadUrl,
                        uploadAsync: true,//默认异步上传
                        uploadExtraData: { imgType: 'ProductMainImg' },//图片上传额外的参数
                        initialPreview: ProductMainImgTag //回显图片
                    });
                    //商品轮播图:
                    var _ProductSlideImgs = eval("(" + productobj.ProductSlideImgs + ")")
                    console.log(_ProductSlideImgs)
                    var ProductSlideImgTag=[]
                    _ProductSlideImgs.map(function (v) {
                        ProductSlideImgTag.push("<img src='" + v.url + "' style='width:200px' class='file-preview-image' >")
                        ProductSlideImgs.push(v)//修改的时候不上传新图片把展示的添加到原来的里面
                    })
                    $('#ProductSlideImgs').fileinput({
                        language: 'zh',//设置语言
                        allowedFileExtensions: ['jpg', 'jpeg', 'png', 'gif'],//接受文件的后缀
                        showUpload: true,//是否显示上传按钮
                        browseclass: "btn btn-primary",//按钮样式
                        dropZoneEnabled: true,
                        uploadUrl: ImgUploadUrl,
                        uploadAsync: true,//默认异步上传
                        uploadExtraData: { imgType: 'ProductSlideImgs' },//图片上传额外的参数
                        initialPreview: ProductSlideImgTag //回显图片
                    });
                    //商品详情
                    var _ProductDetail = eval("(" + productobj.ProductDetail + ")")
                    console.log(_ProductDetail)
                    var ProductDetailTag=[]
                     _ProductDetail.map(function (v) {
                         ProductDetailTag.push("<img src='" + v.url + "' style='width:200px' class='file-preview-image' >")
                         ProductDetail.push(v)//修改的时候不上传新图片把展示的添加到原来的里面
                    })
                    $('#ProductDetail').fileinput({
                        language: 'zh',//设置语言
                        allowedFileExtensions: ['jpg', 'jpeg', 'png', 'gif'],//接受文件的后缀
                        showUpload: true,//是否显示上传按钮
                        browseclass: "btn btn-primary",//按钮样式
                        dropZoneEnabled: true,
                        uploadUrl: ImgUploadUrl,
                        uploadAsync: true,//默认异步上传
                        uploadExtraData: { imgType: 'ProductDetail' },//图片上传额外的参数
                        initialPreview: ProductDetailTag //回显图片
                    });
                    //3.商品sku及属性
                    //商品类别
                    var ProductCategoryPath = eval("(" + productobj.ProductCategoryPath + ")")
                    $("#category1").val(ProductCategoryPath[0])//设置一级分类
                    $("#category1").trigger("change");//触发一级分类下拉框change事件  trigger触发change
                    $("#category2").val(ProductCategoryPath[1])//设置2级分类
                    $("#category2").trigger("change");//触发2级分类下拉框change事件  trigger触发change
                    $("#category3").val(ProductCategoryPath[2])//设置3级分类
                    $("#category3").trigger("change");//触发3级分类下拉框change事件  trigger触发change
                    //初始化sku表格信息
                     //初始化sku显示信息

                    $("#skus div.sku-list").each(function () {
                        var AttrName = $(this).find("div.attr-name").text()
                        var EnterType = $(this).attr("enter-type")
                         //手工录入

                        if (EnterType == "1") {
                             eval("(" + productobj.ProductSkuValues + ")").find(function (v) {
                                if (AttrName == v.name) {
                                    v.values.find(function (_v) {
                                        addSku1("sku-" + AttrName + "-div", AttrName, _v.value)

                                        var checkbox = $("#sku-checkbox-" + _v.value)
                                        checkbox.prop("checked", true);//设为选中
                                        checkbox.trigger(" change")//触发change事件,将skuValue添加到skuArrays数组中

                                    })
                                }
                            })
                            /*
                            eval("(" + productobj.ProductSkuValues + ")").find(function (v) {

                                if (AttrName == v.name) {
                                    alert("相同")
                                    v.values.find(function (_v) {
                                        addSku1("sku-" + v.AttrName + "-div", AttrName, _v.value)
                                        var checkbox = $("sku-checkbox-" + _v.value)
                                        checkbox.prop("checked", true);//选中checked
                                       checkbox.trigger("change")//触发change事件,将skuvalue添加到skuArrays数组中
                                    })
                                }
                            })
                            */
                        }
                         //下拉选择
                        if (EnterType == "2") {
                            $(this).find("div.sku").each(function () {
                                //console.log($(this).find("input[type='checkbox']").attr("sku-value"))
                                var checkbox=$(this).find("input[type='checkbox']")
                                var skuvalue=$(this).find("input[type='checkbox']").attr("sku-value")
                                eval("(" + productobj.ProductSkuValues + ")").find(function (v){
                                    if (AttrName == v.name) {
                                        v.values.find(function (_v) {
                                            if (_v.value == skuvalue) {
                                                checkbox.prop("checked", true);//选中checked
                                                checkbox.trigger("change")//触发change事件,将skuvalue添加到skuArrays数组中
                                                checkbox.trigger("change")
                                            }
                                        })
                                    }
                                })
                            })
                        }

                    })
                    //生成表头
                    //生成表头
                    $("#sku-table thead tr").empty()
                    eval("("+data.skus[0].ProductSku1+")").map(function (v) {
                        $("#sku-table thead tr").append("<th>" + v.name + "</th>")
                    })
                    $("#sku-table thead tr").append("<th>库存</th>")
                    $("#sku-table thead tr").append("<th>价格</th>")
                    $("#sku-table thead tr").append("<th>SKU编号</th>")
                    //生成数据行
                    $("#sku-table tbody").empty()//empty() 方法移除被选元素的所有子节点和内容
                    //清空数据
                    data.skus.map(function (v) {
                        var html = "<tr>"
                        eval("("+v.ProductSku1+")").map(function (_v) {
                            html += "<td>" + _v.value + "</td>"
                        })
                        html += "<td><input type=\"text\" class=\"kc\" id=\"stock\" value=\""+v.Stock+"\"/></td>"
                        html += "<td><input type=\"text\" class=\"jg\" id=\"price\"  value=\""+v.Price+"\"/></td>"
                        html += "<td><input type=\"text\" class=\"bh\" id=\"Bianhao\" value=\""+v.SkuNum+"\" /></td>"
                        html += "</tr>"
                        $("#sku-table tbody").append(html)
                         //results里是数组
                        results.push(eval("(" + v.ProductSku1 + ")"))//将展示的数据添加到results

                    })

                    //初始化商品属性
                    $("#sx div.attr").each(function () {

                        var AttrName = $(this).find("div.attr-name").text()
                        var attrValue = null;
                        //根据属性名称在data.attr数组中进行查找并获取属性值
                        data.attrs.find(function (v) {
                            var attr=eval("(" + v.ProductAttrs + ")")
                            if (attr.AttrName == AttrName) {
                                attrValue = attr.Attrvalue
                                return true
                            }
                        })
                        if (attrValue != null) {

                             var EnterType = $(this).attr("enter-type")
                        if (EnterType == "1") {
                            $(this).find("input").val(attrValue)
                        } else {
                             $(this).find("select").val(attrValue)
                        }
                        }
                    })

                    //6初始化skuimg

                   // skuArrays = eval("(" + productobj.ProductSkuValues + ")")
                    skuArrays = JSON.parse(productobj.ProductSkuValues)
                    console.log("中华人名共和国中央人民政府");
                    console.log(skuArrays);
                    initSkuImg();
             }
            })
    }
    //向导插件初始化
    $("#wizard").steps({
        labels: {
            next: "下一步",
            previous: "上一步",
            finish: "完成"
        },
        //点击保存
        onFinished: function () {
            var product = {}
            var productobj = {}
            productobj.ID=$.getUrlParam("id")
            //商品标题
            productobj.ProductTitle = $("#ProductTitle").val()
            //商品品牌
            productobj.ProductBrandID = $("#brand").val()
             //商品关键字
            productobj.keyWords=$("#keyWords").val()
            //商品价格
            productobj.Price = $("#Price").val()
            //商品库存
            productobj.Stock = $("#Stock").val()
            //JSON.stringify将数组或js对象转化成json字符串
            //商品主图:
            productobj.ProductMainImg = JSON.stringify(ProductMainImg);
            //商品轮播图:
            productobj.ProductSlideImgs = JSON.stringify(ProductSlideImgs);
            //商品详情
            productobj.ProductDetail = JSON.stringify(ProductDetail);
            //productID
            productobj.ProductCategoryID = ProductCategoryID;
            //ProductCategoryPath  方便修改显示数据
            productobj.ProductCategoryPath = JSON.stringify([
                $("#category1").val(),
                $("#category2").val(),
                $("#category3").val(),
            ])
            productobj.ProductSkuValues=JSON.stringify(skuArrays)
            product.Product = productobj;
            //价格库存sku编号
            skuDatas=[]
            $("#sku-table tbody tr").each(function (index) {
                var sku = {}
                sku.ProductSku1 = JSON.stringify(results[index])
                //价格
                sku.Price = $(this).find("input.jg").val()
                //库存
                sku.Stock=$(this).find("input.kc").val()
                 //sku编号
                sku.SkuNum = $(this).find("input.bh").val()

                skuDatas.push(sku)
            })
            product.Skus = skuDatas;

             attrDatas=[]
            $("#sx div.attr").each(function () {
                var attr = {}
                attr.AttrName = $(this).find("div.attr-name").text()
                var EnterType = $(this).attr("enter-type")
                if (EnterType == "1") {
                    attrvalue = $(this).find("input").val()
                } else {
                    attrvalue = $(this).find("select").val()
                }
                attr.Attrvalue = attrvalue
                attrDatas.push({ ProductAttrs: JSON.stringify(attr)})
            })
            product.Attrs = attrDatas;
            //console.log(skuDatas)
            //console.log(attrDatas)
            console.log(product)

             //2 ajax请求
                $.ajax({
                    //指定请求地址
                    url: "Update",
                    //指定请求方式 POST  Get
                    type: "POST",
                    //期望服务端返回的数据格式(在回调函数中会自动将json串转化成js对象)
                    dataType: "json",
                    //向服务端发送的数据
                    data: JSON.stringify(product),//将js对象序列化json字符串
                    contentType: "application/json;charset=utf-8",//指定数据的类型为json
                    //当请求成功的回调函数,一般会在接受服务端返回的数据
                    //{"State":true}(自动将json串转化成js对象,{State:true})
                    success: function (result) {//result参数代表服务端返回的数据
                        if (result.State) {
                             toastr.success('修改成功.')
                            //document.getElementById("form").result();
                        } else {
                            toastr.error(result.msg)
                        }
                    },
                    //当请求失败的回调函数,一般会在接受服务端返回的数据
                    error: function (result) {//result参数代表服务端返回的数据
                        toastr.error('修改失败.')

                    }

                });

        }
    });

        //设置上传插件
    //商品轮播图
    //图片上传成功的回调函数
    $("#ProductSlideImgs").on('fileuploaded', function (event, data, previewId, index) {//异步上传成功结果处理
        //var img = JSON.parse(data);//将服务端返回json字符串转换成js对象
        //console.log(img)
        // console.log(data.response)
        ProductSlideImgs.push(data.response[0]);
    })
    //图片修改删除之前的图片
    $("#ProductSlideImgs").on('change', function (event) {
        ProductSlideImgs = []
    })

    //图片上传失败的回调函数
    $("#ProductSlideImgs").on('fileerror', function (event, data, msg) {//异步上传失败结果处理
        alert("上传失败");
    });
    //商品详情
    //图片上传成功的回调函数
    $("#ProductDetail").on('fileuploaded', function (event, data, previewId, index) {//异步上传成功结果处理
        //var img = JSON.parse(data);//将服务端返回json字符串转换成js对象
        //console.log(img)
        //console.log(data.response)
        ProductDetail.push(data.response[0]);
    })
    //图片修改删除之前的图片
    $("#ProductDetail").on('change', function (event) {
        ProductDetail = []
    })
    //图片上传失败的回调函数
    $("#ProductDetail").on('fileerror', function (event, data, msg) {//异步上传失败结果处理
        alert("上传失败");
    });
    //商品主图
    //图片上传成功的回调函数
    $("#ProductMainImg").on('fileuploaded', function (event, data, previewId, index) {//异步上传成功结果处理
        //var img = JSON.parse(data);//将服务端返回json字符串转换成js对象
        //console.log(img)
        //console.log(data.response)
        ProductMainImg.push(data.response[0]);
    })
    //图片修改删除之前的图片
    $("#ProductMainImg").on('change', function (event) {
        ProductMainImg = []
    })
    //图片上传失败的回调函数
    $("#ProductMainImg").on('fileerror', function (event, data, msg) {//异步上传失败结果处理
        alert("上传失败");
    });

        //$(function () {
        //    //设置上传插件
        //    $('#Img').fileinput({
        //        language: 'zh',//设置语言
        //        allowedFileExtensions: ['jpg', 'jpeg', 'png', 'gif'],
        //        showUpload: false,//是否显示上传按钮
        //        browseclass: "btn btn-primary",
        //        dropZoneEnabled: false,
        //    });
        //})
        //面试三级联动!!!!
        //简化三级联动的代码
    function fillCategory(pid, $select) {
        $.ajax({
            url: "/ProductCategory/GetByPID",
            type: "GET",
            data: { pid: pid },
            dataType: "json",
            async: false,//设置ajax为同步上传
            success: function (data) {
                //console.log(data)
                $select.empty()//empty清楚子元素
                $select.append("<option value=\"\">请选择</option>")
                data.map(function (v) {//数组使用map遍历数据
                    $select.append("<option value=\"" + v.ID + "\">" + v.Name + "</option>")
                })
            }
        })
    }
    $(function () {
        fillCategory(0, $("#category1"))//填充一级分类
        $("#category2").append("<option value=\"\">请选择</option>")
        $("#category3").append("<option value=\"\">请选择</option>")
    })
    //为一级分类下拉框注册改变事件
    $("#category1").change(function () {
        var pid = $(this).val()//获取一级分类选中项的id
        fillCategory(pid, $("#category2"))//填充二级分类
        //清空三级分类
        $("#category3").empty()
        $("#category3").append("<option value=\"\">请选择</option>")
    })
    $("#category2").change(function () {
        var pid = $(this).val()//获取二级分类选中项的id
        fillCategory(pid, $("#category3"))//填充三级分类
    })
    //addsku点击事件
    function addSku(inputID, divID, SkuName) {

        //prev():定位到前一个节点,next():定位到后一个节点
        var skuValue = $("#" + inputID).val()
        if (skuValue == "") {
            alert('选项不得为空')
            return
        }
        $("#" + inputID).val("")
        var html = "";
        html += "<div class=\"icheck-primary d-inline\" style=\"padding-right:15px;\">";
        html += " <input type=\"checkbox\"/  id=\"sku-checkbox-" + skuValue + "\" onchange=\"addSkuToArray(this,'" + SkuName + "','" + skuValue + "')\">";
        html += "<label for=\"sku-checkbox-" + skuValue + "\" style=\"font-weight:normal\">" + skuValue + "</label>";
        html += "</div>";
        //var html = "<span><input type=\"checkbox\"  onchange=\"addSkuToArray(this,'" + SkuName + "','" + skuValue + "')\" />" + skuValue + "&nbsp;&nbsp;<\span>"
        //alert(skuValue)
        //parent() 方法返回被选元素的直接父元素
        $("#" + divID).append(html)
    }
    function addSku1(divID, SkuName, skuValue) {

        var html = "";
        html += "<div class=\"icheck-primary d-inline\" style=\"padding-right:15px;\">";
        html += " <input type=\"checkbox\"/  id=\"sku-checkbox-" + skuValue + "\" onchange=\"addSkuToArray(this,'" + SkuName + "','" + skuValue + "')\">";
        html += "<label for=\"sku-checkbox-" + skuValue + "\" style=\"font-weight:normal\">" + skuValue + "</label>";
        html += "</div>";
        $("#" + divID).append(html)
        console.log(skuValue)
    }
    var skuArrays = []
    results = [];
    result = [];
    //
    //[1, 2, 3]
    //[a, b, c]
    //[x, y, z]
    //
    //第一步:取出第一个数组的第一个值,放入result中,result=[1]
    //第二步:取出第二个数组的第一个值,放入result中,result=[1,a]
    //第三步:取出第三个数组的第一个值,放入result中,result=[1,a,x],并将result拷贝一份放到result数组中
    //第四步:取出第三个数组的第二个值,放入result中,result=[1,a,y],并将result拷贝一份放到result数组中
    //第五步:取出第三个数组的第三个值,放入result中,result=[1,a,z],并将result拷贝一份放到result数组中
    function doExchange(arr, depth) {
        //多个数组必须全部选中才能生成少一不可  ?????
        for (var i = 0; i < arr[depth].length; i++) {//循环第一个小组
            result[depth] = arr[depth][i]
            if (depth != arr.length - 1) {
                doExchange(arr, depth + 1)
            } else {
                results.push(result.slice())
            }
        }
    }
    function initSkuImg() {
        //alert(1)
        $("#SkuImg").empty()
        console.log("滴滴滴")
        skuArrays.map(function (v) {
          console.log(skuArrays)
            if (v.IsImg == 1) {

                //    var html = '<div style="padding - bottom: 15px" class="row">';
                //html += '<div style="padding-top:13px;" class="col-sm-2 col-form-label">' +  v2.value + '</div>' +
                //    '<div class="col-sm-6  col-form-label">' +
                //    '<input type="file" id="IsRelectImg' + str + '"/>' +
                //    '</div>';
                //html += '</div>';

                var html = "<label class=\"col-sm-2 col-form-label\">关联图片：</label>"
                v.values.map(function (v2) {
                    html += "<div class=\"form-group row col-sm-10\">" +
                        "<label for=\"skuImg-" + v2.value + "\"class=\"col-sm-2 col-form-label\">" + v2.value + "</label>" +
                        "<div class=\"col-sm-8 col-form-label\">" +
                        "<input type=\"file\"id =\"skuImg-" + v2.value + "\"/>" +
                        "</div>" +
                        "</div>"
                })
                $("#SkuImg").append(html)
                v.values.map(function (v2) {
                    console.log(v2)
                    //设置上传插件
                    $("#skuImg-" + v2.value + "").fileinput({
                        language: 'zh',//设置语言
                        allowedFileExtensions: ['jpg', 'jpeg', 'png', 'gif'],
                        showUpload: true,//是否显示上传按钮
                        browseclass: "btn btn-primary",//按钮样式
                        dropZoneEnabled: false,//是否支持拖拽
                        uploadUrl: ImgUploadUrl,
                        uploadAsync: true,//默认异步上传
                        uploadExtraData: { imgType: 'SkuImg' },//图片上传额外的参数
                        initialPreview: [
                            "<img src='" + v2.Img.url + "' class='file-preview-image' style='width: 213px;'>"
                        ]
                    });
                    //图片上传成功的回调函数
                    $("#skuImg-" + v2.value + "").on('fileuploaded', function (event, data, previewId, index) {//异步上传成功结果处理
                        //var img = JSON.parse(data);//将服务端返回json字符串转换成js对象
                        v2.Img = data.response[0]
                    })
                    //图片上传失败的回调函数
                    $("#skuImg-" + v2.value + "").on('fileerror', function (event, data, msg) {//异步上传失败结果处理
                        alert("关联图片上传失败");
                    });
                })


            }
        })
    }
        //生成sku组合
        function createSkuCollections() {
            results = [];
            result = [];
            newSkuArrays = []
            console.log(newSkuArrays)
            initSkuImg();
            skuArrays.map(function (v) {
                if (v.values.length != 0) {
                    newSkuArrays.push(v.values)
                }

            })
            doExchange(newSkuArrays, 0);
            //console.log(newSkuArrays)
            //console.log(results)
            //console.log(skuArrays)
            //生成表头
            $("#sku-table thead tr").empty()
            results[0].map(function (_v) {
                $("#sku-table thead tr").append("<th>" + _v.name + "</th>")
            })
            $("#sku-table thead tr").append("<th>库存</th>")
            $("#sku-table thead tr").append("<th>价格</th>")
            $("#sku-table thead tr").append("<th>SKU编号</th>")

            //console.log(results)
            //生成数据行
            $("#sku-table tbody").empty()//empty() 方法移除被选元素的所有子节点和内容
            //清空数据
            results.map(function (v) {
                var html = "<tr>"
                v.map(function (_v) {
                    html += "<td>" + _v.value + "</td>"
                })
                html += "<td><input type=\"text\" class=\"kc\" id=\"stock\"/></td>"
                html += "<td><input type=\"text\" class=\"jg\" id=\"price\"  /></td>"
                 html += "<td><input type=\"text\" class=\"bh\" id=\"Bianhao\"  /></td>"
                html += "</tr>"
                $("#sku-table tbody").append(html)
            })
            $("#gn div.anniu").remove()//remove() 删除被选元素（及其子元素）
            var html = "<div class=\"col-sm-2 anniu\"><button onclick=\"kucun()\" class=\"btn btn-primary  \" type=\"button\">刷新库存</button></div>"
            html += "<div class=\"col-sm-2 anniu\"><button onclick=\"jiage()\" class=\"btn btn-primary\" type=\"button\">刷新价格</button></div>"
            html += "<div class=\"col-sm-2 anniu\"><button onclick=\"bianhao()\" class=\"btn btn-primary\" type=\"button\">刷新编号</button></div>"
            $("#gn").append(html)

    }
    //选择checkbox添加到数组时判断
    function addSkuToArray(obj, skuName, skuValue) {

            var isChecked = $(obj).prop("checked");
            skuArrays.map(function (v) {

                if (skuName == v.name) {
                    console.log(v)
                    var pos = -1;
                    for (var i = 0; i < v.values.length; i++) {
                        if (v.values[i].value == skuValue) {
                            pos = i;
                            break;
                        }
                    }
                    if (isChecked) {
                        if (pos == -1) {
                            v.values.push({ name: skuName, value: skuValue })

                        }
                    } else {
                        if (pos != -1) {
                            v.values.splice(pos, 1);
                        }

                    }
                }


            })
            console.log(skuArrays)

        }
        //function addSkuToArray(obj, skuName, skuValue) {
        //    var isChecked = $(obj).prop("checked");
        //    skuArrays.map(function (v) {

        //        if (skuName == v.name) {
        //            //console.log(v)
        //            var pos = -1;
        //            for (var i = 0; i < v.values.length; i++) {
        //                if (v.values[i].value == skuValue) {
        //                    pos = i;
        //                    break;
        //                }
        //            }
        //            if (isChecked) {
        //                if (pos == -1) {
        //                    v.values.push({ name: skuName, value: skuValue })
        //                }
        //            } else {
        //                if (pos != -1) {
        //                    v.values.splice(pos, 1);
        //                }
        //            }
        //        }
        //        //var ischecked = $(obj).prop("checked")//获取选中的状态
        //        ////alert(ischecked)
        //        //skuArrays.map(function (v) {

        //        //    if ($.trim(skuName) == $.trim(v.name)) {
        //        //        if (ischecked) {
        //        //            v.values.push({ name: skuName, value: skuValue })//{name:skuName,value:skuValue}
        //        //        } else {
        //        //            var pos = -1;
        //        //            for (var i = 0; i < v.values.length; i++) {
        //        //                if (v.values[i].value == skuValue) {
        //        //                    pos = i;
        //        //                    break;
        //        //                }
        //        //            }
        //        //            var pos = $.inArray(skuValue, v.values);//返回元素下标,不存在返回-1
        //        //            if (pos != -1) {
        //        //                v.values.splice(pos, 1)
        //        //            }
        //        //        }
        //        //    }
        //    })
        //    console.log(skuArrays)
        //}
        //刷新库存
        function kucun() {
            var stock = document.getElementById("stock").value;
            //alert(document.getElementById("stock").value)
            $(".kc").val(stock);
        }
        //刷新价格
        function jiage() {
            var Price = document.getElementById("price").value;
            //alert(document.getElementById("Price").value)
            $(".jg").val(Price);
    }
      //刷新编号
        function bianhao() {
            var Bianhao = document.getElementById("Bianhao").value;
            //alert(document.getElementById("Price").value)
            $(".bh").val(Bianhao);
        }
        //为三级分类下拉框注册改变事件,获取sku信息
        $("#category3").change(function () {
           
            var id =  ProductCategoryID=$(this).val()
            $.ajax({
                url: "/ProductAttrKeySku/GetByCategoryID",
                type: "GET",
                data: { categoryID: id },
                dataType: "json",
                async:false,//设置ajax为同步上传
                success: function (data) {
                    console.log(data)
                    $("#skus").empty()//点击第二次的时候删除上次生成
                    $("#sku-table thead tr").empty()//删除上次的表头
                    $("#sku-table tbody").empty()//删除上次的数据

                    data.map(function (v) {
                        var sku = {}
                        sku.name = v.AttrName
                        sku.IsImg=v.IsImg
                    sku.values = []
                        var html = "<div style=\"padding-bottom:15px;\" class=\"sku-list\" enter-type=\"" + v.EnterType + "\">" +
                            "<div style=\"padding-bottom:5px;\" class=\"attr-name\">" + v.AttrName + "</div>";
                        "<div>";
                    if (v.EnterType == 1) {//手动录入

                        html += "<div class=\"row\" style=\"padding-bottom:5px\"><div class=\"col-sm-3\"><input type=\"text\"/ class=\"form-control\" id=\"sku-" + v.AttrName + "-input\" /></div><div class=\"col-sm-3\"><button class=\"btn btn-outline-primary btn-sm\" onclick=\"addSku('sku-" + v.AttrName + "-input','sku-" + v.AttrName + "-div','" + v.AttrName + "')\">添加</button></div></div>";
                        html += "<div id=\"sku-" + v.AttrName + "-div\"></div>";//存放手工录入属性值

                    } else if (v.EnterType == 2) {//下拉选择
                        v.AttrValues.map(function (v_attrvalue) {
                            html += "<div class=\"icheck-primary d-inline sku\" style=\"padding-right:15px;\">";
                            html += "<input sku-value=\""+v_attrvalue+"\" type=\"checkbox\" id=\"sku-" + v.AttrName + "-" + v_attrvalue + "\" onchange=\"addSkuToArray(this,'" + v.AttrName + "','" + v_attrvalue + "')\"/>" +
                                "<label for=\"sku-" + v.AttrName + "-" + v_attrvalue + "\" style=\"font-weight:normal\">" + v_attrvalue + " </label>" +
                                "</div>";
                        });
                    }
                    html += "</div>";
                    html += "</div>"
                        $("#skus").append(html);
                        skuArrays.push(sku);
                       
                    })

                    console.log("苍井空");
                    console.log(skuArrays)
                }
            })
        })
        //商品参数
        $("#category3").change(function () {

            var id = $(this).val()
            $.ajax({
                url: "/ProductAttrKeySku/ByCategoryID",
                type: "GET",
                data: { categoryID: id },
                dataType: "json",
                async:false,//设置ajax为同步上传
                success: function (data) {
                    //console.log(data)
                    $("#sx").empty()//点击第二次的时候删除上次生成
                    data.map(function (v) {
                        var sku = {}
                        sku.name = v.AttrName
                        sku.values = []
                        var html = "<div style=\"padding-bottom:15px;\" class=\"attr row\" enter-type=\""+v.EnterType+"\">";
                        html += " <div style=\"padding-bottom:5px;\" class=\"col-sm-4 col-form-label attr-name\">" + v.AttrName + "</div>"
                        if (v.EnterType == 1) {//手动录入
                            html += "<input type=\"text\" class=\"form-control\"/>";
                        }
                        else if (v.EnterType == 2) {//下拉选择
                            html += "<select  class=\"form-control col-sm-6\" style=\"font-size:14px\">";
                            html += "<option value=\"\">请选择</option>";
                            v.AttrValues.map(function (v_attrvalue) {
                                html += "<option value=\"" + v_attrvalue + "\">" + v_attrvalue + "</option>"
                            })
                            html += "</select>";
                        }
                        html += "</div>";
                        $("#sx").append(html)
                        //skuArrays.push(sku)
                    })
                }
            })
        })
        $("#upload").click(function () {
         //1 收集数据
             //商品标题
            var ProductTitle = $("#ProductTitle").val()
            //商品价格
            var ProductPrice = $("#ProductPrice").val()
            //商品库存
             var ProductStock = $("#ProductStock").val()
            ////商品主图:
            //var ProductMainImg = $("#ProductMainImg").val()
            ////商品轮播图:
            //var ProductSlideImgs = $("#ProductSlideImgs").val()
            ////商品详情
            //var ProductDetail = $("#ProductDetail").val()
            //获取所有元素
            //each相当于for循环
            var guige = []
            $("#sx select").each(function () {
                guige.push($(this).val())
                //alert($(this).val())
            })
                //var ProductCategoryID=@ViewBag.PrProductCategoryID;
                //var ProductCategoryID = $.getUrlParam('id');
                //alert(ProductCategoryID)

                var data = {
                    guige: guige,
                    ProductTitle: ProductTitle,
                    ProductStock: ProductStock,
                    ProductPrice: ProductPrice,
                    //ProductCategoryID: ProductCategoryID
                }
                //console.log(data)
                //data = {
                //    AttrName: "aaa",
                //    OrderNum: 1,
                //    EnterType: 2,
                //    AttrValues: ["a","b","c"],
                //    ProductCategoryID:1
                //}
                //var url = "/ProductAttrKey/Add"
                //var msg="添加成功"
                //if (opreateFlag == 2) {
                //    data.ID = editId
                //    msg="修改成功"
                //   url = "/ProductAttrKey/Edit"
                //}
                //2 ajax请求
                $.ajax({
                    //指定请求地址
                    url: "Add",
                    //指定请求方式 POST  Get
                    type: "POST",
                    //期望服务端返回的数据格式(在回调函数中会自动将json串转化成js对象)
                    dataType: "json",
                    //向服务端发送的数据
                    data: JSON.stringify(data),//将js对象序列化json字符串
                    contentType: "application/json;charset=utf-8",//指定数据的类型为json
                    //当请求成功的回调函数,一般会在接受服务端返回的数据
                    //{"State":true}(自动将json串转化成js对象,{State:true})
                    success: function (result) {//result参数代表服务端返回的数据
                        if (result.State) {
                            toastr.success(msg)
                            document.getElementById("form").reset();
                        } else {
                            toastr.error(result.msg)
                        }
                    },
                    //当请求失败的回调函数,一般会在接受服务端返回的数据
                    error: function (result) {//result参数代表服务端返回的数据
                        toastr.error('添加失败.')

                    }

                });
        })
    //初始化商品函数
        init();
    </script>
}





